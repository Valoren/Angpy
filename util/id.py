import threading
## This module is responsible for assigning unique IDs to most game objects.

## Auto-incrementing ID.
globalId = 0
## Lock around modifying the above.
idLock = threading.Lock()


## If the input value is not None, return it; otherwise, return the next ID
# in sequence.
def getId(input = None):
    if input is not None:
        return input
    with idLock:
        global globalId
        globalId += 1
        return globalId


## Set the 'id' field of the object to the new value, and ensure that any 
# IDs generated by getId() from this point onwards will be higher than this
# value. This is mostly useful when we create objects with pre-existing IDs
# (e.g. from a previous session of the program) and need to ensure there will
# be no ID conflicts.
def setId(obj, newId):
    with idLock:
        obj.id = newId
        global globalId
        globalId = max(globalId, newId + 1)

